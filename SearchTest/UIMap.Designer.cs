// ------------------------------------------------------------------------------
//  <auto-generated>
//      此代码由编码的 UI 测试生成器生成。
//      版本: 10.0.0.0
//
//      如果重新生成代码，则更改此文件可能会导致错误的行为，
//      并将丢失这些更改。
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SearchTest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("编码的 UI 测试生成器", "10.0.30319.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinCell uIYFDTTLCHBACell = this.UIFundHelperWindow.UIDataGridView1Window.UIDataGridViewTable.UI行6Row.UIYFDTTLCHBACell;
            WinButton uI图形Button = this.UIFundHelperWindow.UI图形Window.UI图形Button;
            WinControl uIXaxis主要网格线Image = this.UIFundHelperWindow.UIChart1Chart.UIXaxis主要网格线Image;
            WinControl uIChart1Chart = this.UIFundHelperWindow.UIChart1Window.UIChart1Chart;
            WinButton uI列表Button = this.UIFundHelperWindow.UI列表Window.UI列表Button;
            WinButton uI返回Button = this.UIFundHelperWindow.UI返回Window.UI返回Button;
            #endregion

            // 单击 “YFDTTLCHBA” 单元格
            Mouse.Click(uIYFDTTLCHBACell, new Point(11, 10));

            // 双击 “YFDTTLCHBA” 单元格
            Mouse.DoubleClick(uIYFDTTLCHBACell, new Point(90, 12));

            // 单击 “图形” 按钮
            Mouse.Click(uI图形Button, new Point(22, 14));

            // 将  “X axis 主要网格线” 图像 从(227, 412)移至(368, 445)
            Mouse.StartDragging(uIXaxis主要网格线Image, new Point(227, 412));
            Mouse.StopDragging(uIXaxis主要网格线Image, 141, 33);

            // 将  “chart1” Chart 从(423, 508)移至(422, 502)
            Mouse.StartDragging(uIChart1Chart, new Point(423, 508));
            Mouse.StopDragging(uIChart1Chart, -1, -6);

            // 单击 “chart1” Chart
            Mouse.Click(uIChart1Chart, new Point(97, 437));

            // 单击 “列表” 按钮
            Mouse.Click(uI列表Button, new Point(25, 12));

            // 单击 “图形” 按钮
            Mouse.Click(uI图形Button, new Point(7, 11));

            // 单击 “返回” 按钮
            Mouse.Click(uI返回Button, new Point(28, 10));
        }
        
        /// <summary>
        /// AssertMethod1 - 使用“AssertMethod1ExpectedValues”将参数传递到此方法中。
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WinControl uIChart1Chart = this.UIFundHelperWindow.UIChart1Window.UIChart1Chart;
            #endregion

            // 确认 “chart1” Chart 的属性“Exists”等于“True”
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIChart1ChartExists, uIChart1Chart.Exists);
        }
        
        #region Properties
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public UIFundHelperWindow UIFundHelperWindow
        {
            get
            {
                if ((this.mUIFundHelperWindow == null))
                {
                    this.mUIFundHelperWindow = new UIFundHelperWindow();
                }
                return this.mUIFundHelperWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private UIFundHelperWindow mUIFundHelperWindow;
        #endregion
    }
    
    /// <summary>
    /// 要传递到“AssertMethod1”中的参数
    /// </summary>
    [GeneratedCode("编码的 UI 测试生成器", "10.0.30319.1")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// 确认 “chart1” Chart 的属性“Exists”等于“True”
        /// </summary>
        public bool UIChart1ChartExists = true;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "10.0.30319.1")]
    public class UIFundHelperWindow : WinWindow
    {
        
        public UIFundHelperWindow()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Fund Helper";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Fund Helper");
            #endregion
        }
        
        #region Properties
        public UIDataGridView1Window UIDataGridView1Window
        {
            get
            {
                if ((this.mUIDataGridView1Window == null))
                {
                    this.mUIDataGridView1Window = new UIDataGridView1Window(this);
                }
                return this.mUIDataGridView1Window;
            }
        }
        
        public UI图形Window UI图形Window
        {
            get
            {
                if ((this.mUI图形Window == null))
                {
                    this.mUI图形Window = new UI图形Window(this);
                }
                return this.mUI图形Window;
            }
        }
        
        public UIChart1Chart UIChart1Chart
        {
            get
            {
                if ((this.mUIChart1Chart == null))
                {
                    this.mUIChart1Chart = new UIChart1Chart(this);
                }
                return this.mUIChart1Chart;
            }
        }
        
        public UIChart1Window UIChart1Window
        {
            get
            {
                if ((this.mUIChart1Window == null))
                {
                    this.mUIChart1Window = new UIChart1Window(this);
                }
                return this.mUIChart1Window;
            }
        }
        
        public UI列表Window UI列表Window
        {
            get
            {
                if ((this.mUI列表Window == null))
                {
                    this.mUI列表Window = new UI列表Window(this);
                }
                return this.mUI列表Window;
            }
        }
        
        public UI返回Window UI返回Window
        {
            get
            {
                if ((this.mUI返回Window == null))
                {
                    this.mUI返回Window = new UI返回Window(this);
                }
                return this.mUI返回Window;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridView1Window mUIDataGridView1Window;
        
        private UI图形Window mUI图形Window;
        
        private UIChart1Chart mUIChart1Chart;
        
        private UIChart1Window mUIChart1Window;
        
        private UI列表Window mUI列表Window;
        
        private UI返回Window mUI返回Window;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "10.0.30319.1")]
    public class UIDataGridView1Window : WinWindow
    {
        
        public UIDataGridView1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dataGridView1";
            this.WindowTitles.Add("Fund Helper");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "10.0.30319.1")]
    public class UIDataGridViewTable : WinTable
    {
        
        public UIDataGridViewTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("Fund Helper");
            #endregion
        }
        
        #region Properties
        public UI行6Row UI行6Row
        {
            get
            {
                if ((this.mUI行6Row == null))
                {
                    this.mUI行6Row = new UI行6Row(this);
                }
                return this.mUI行6Row;
            }
        }
        #endregion
        
        #region Fields
        private UI行6Row mUI行6Row;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "10.0.30319.1")]
    public class UI行6Row : WinRow
    {
        
        public UI行6Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties.Add(new PropertyExpression(WinRow.PropertyNames.Value, ";YFDTTLCHBA;易方达天天理财货币A;货币型", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Fund Helper");
            #endregion
        }
        
        #region Properties
        public WinCell UIYFDTTLCHBACell
        {
            get
            {
                if ((this.mUIYFDTTLCHBACell == null))
                {
                    this.mUIYFDTTLCHBACell = new WinCell(this);
                    #region 搜索条件
                    this.mUIYFDTTLCHBACell.SearchProperties[WinCell.PropertyNames.Value] = "YFDTTLCHBA";
                    this.mUIYFDTTLCHBACell.WindowTitles.Add("Fund Helper");
                    #endregion
                }
                return this.mUIYFDTTLCHBACell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIYFDTTLCHBACell;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "10.0.30319.1")]
    public class UI图形Window : WinWindow
    {
        
        public UI图形Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button4";
            this.WindowTitles.Add("Fund Helper");
            #endregion
        }
        
        #region Properties
        public WinButton UI图形Button
        {
            get
            {
                if ((this.mUI图形Button == null))
                {
                    this.mUI图形Button = new WinButton(this);
                    #region 搜索条件
                    this.mUI图形Button.SearchProperties[WinButton.PropertyNames.Name] = "图形";
                    this.mUI图形Button.WindowTitles.Add("Fund Helper");
                    #endregion
                }
                return this.mUI图形Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI图形Button;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "10.0.30319.1")]
    public class UIChart1Chart : WinControl
    {
        
        public UIChart1Chart(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[UITestControl.PropertyNames.Name] = "chart1";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Chart";
            this.WindowTitles.Add("Fund Helper");
            #endregion
        }
        
        #region Properties
        public WinControl UIXaxis主要网格线Image
        {
            get
            {
                if ((this.mUIXaxis主要网格线Image == null))
                {
                    this.mUIXaxis主要网格线Image = new WinControl(this);
                    #region 搜索条件
                    this.mUIXaxis主要网格线Image.SearchProperties[UITestControl.PropertyNames.Name] = "X axis 主要网格线";
                    this.mUIXaxis主要网格线Image.SearchProperties[UITestControl.PropertyNames.ControlType] = "Image";
                    this.mUIXaxis主要网格线Image.WindowTitles.Add("Fund Helper");
                    #endregion
                }
                return this.mUIXaxis主要网格线Image;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIXaxis主要网格线Image;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "10.0.30319.1")]
    public class UIChart1Window : WinWindow
    {
        
        public UIChart1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "chart1";
            this.WindowTitles.Add("Fund Helper");
            #endregion
        }
        
        #region Properties
        public WinControl UIChart1Chart
        {
            get
            {
                if ((this.mUIChart1Chart == null))
                {
                    this.mUIChart1Chart = new WinControl(this);
                    #region 搜索条件
                    this.mUIChart1Chart.SearchProperties[UITestControl.PropertyNames.Name] = "chart1";
                    this.mUIChart1Chart.SearchProperties[UITestControl.PropertyNames.ControlType] = "Chart";
                    this.mUIChart1Chart.WindowTitles.Add("Fund Helper");
                    #endregion
                }
                return this.mUIChart1Chart;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIChart1Chart;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "10.0.30319.1")]
    public class UI列表Window : WinWindow
    {
        
        public UI列表Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button5";
            this.WindowTitles.Add("Fund Helper");
            #endregion
        }
        
        #region Properties
        public WinButton UI列表Button
        {
            get
            {
                if ((this.mUI列表Button == null))
                {
                    this.mUI列表Button = new WinButton(this);
                    #region 搜索条件
                    this.mUI列表Button.SearchProperties[WinButton.PropertyNames.Name] = "列表";
                    this.mUI列表Button.WindowTitles.Add("Fund Helper");
                    #endregion
                }
                return this.mUI列表Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI列表Button;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "10.0.30319.1")]
    public class UI返回Window : WinWindow
    {
        
        public UI返回Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button3";
            this.WindowTitles.Add("Fund Helper");
            #endregion
        }
        
        #region Properties
        public WinButton UI返回Button
        {
            get
            {
                if ((this.mUI返回Button == null))
                {
                    this.mUI返回Button = new WinButton(this);
                    #region 搜索条件
                    this.mUI返回Button.SearchProperties[WinButton.PropertyNames.Name] = "返回";
                    this.mUI返回Button.WindowTitles.Add("Fund Helper");
                    #endregion
                }
                return this.mUI返回Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI返回Button;
        #endregion
    }
}
